import BaseRenderObject, { BaseRenderConfig } from './BaseRenderObject'
import { alignTo } from '../utils/utils'

interface ImageRenderConfig extends BaseRenderConfig {
  src: string
}

export default class ImageRenderObject extends BaseRenderObject<ImageRenderConfig> {
  sprite!: PIXI.Sprite
  container!: PIXI.Container

  protected get _filterTargetContainer() {
    return this.sprite
  }

  protected _onload() {
    super._onload()

    alignTo(this.sprite, this.config.app.screen, 'contain', this.config.crop)
  }

  protected _createRenderContainer() {
    const { src } = this.config

    const sprite = PIXI.Sprite.from(src)
    const container = new PIXI.Container()
    container.addChild(sprite)

    this.sprite = sprite
    this.container = container

    if (!sprite.texture.baseTexture.hasLoaded) {
      sprite.texture.baseTexture.once('loaded', () => this._onload())
    } else {
      this._onload()
    }

    return container
  }
}
